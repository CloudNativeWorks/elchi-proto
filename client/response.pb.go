// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: client/response.proto

package client

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VersionStatus int32

const (
	VersionStatus_SUCCESS           VersionStatus = 0
	VersionStatus_DOWNLOAD_FAILED   VersionStatus = 1
	VersionStatus_EXTRACTION_FAILED VersionStatus = 2
	VersionStatus_PERMISSION_FAILED VersionStatus = 3
	VersionStatus_VERSION_NOT_FOUND VersionStatus = 4
	VersionStatus_NETWORK_ERROR     VersionStatus = 5
	VersionStatus_DIRECTORY_ERROR   VersionStatus = 6
)

// Enum value maps for VersionStatus.
var (
	VersionStatus_name = map[int32]string{
		0: "SUCCESS",
		1: "DOWNLOAD_FAILED",
		2: "EXTRACTION_FAILED",
		3: "PERMISSION_FAILED",
		4: "VERSION_NOT_FOUND",
		5: "NETWORK_ERROR",
		6: "DIRECTORY_ERROR",
	}
	VersionStatus_value = map[string]int32{
		"SUCCESS":           0,
		"DOWNLOAD_FAILED":   1,
		"EXTRACTION_FAILED": 2,
		"PERMISSION_FAILED": 3,
		"VERSION_NOT_FOUND": 4,
		"NETWORK_ERROR":     5,
		"DIRECTORY_ERROR":   6,
	}
)

func (x VersionStatus) Enum() *VersionStatus {
	p := new(VersionStatus)
	*p = x
	return p
}

func (x VersionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VersionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_client_response_proto_enumTypes[0].Descriptor()
}

func (VersionStatus) Type() protoreflect.EnumType {
	return &file_client_response_proto_enumTypes[0]
}

func (x VersionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VersionStatus.Descriptor instead.
func (VersionStatus) EnumDescriptor() ([]byte, []int) {
	return file_client_response_proto_rawDescGZIP(), []int{0}
}

type ResponseDeploy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files             string `protobuf:"bytes,1,opt,name=files,proto3" json:"files,omitempty"`
	Service           string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Network           string `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
	DownstreamAddress string `protobuf:"bytes,4,opt,name=downstream_address,json=downstreamAddress,proto3" json:"downstream_address,omitempty"`
	Port              uint32 `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	InterfaceId       string `protobuf:"bytes,6,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	IpMode            string `protobuf:"bytes,7,opt,name=ip_mode,json=ipMode,proto3" json:"ip_mode,omitempty"`
	Version           string `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ResponseDeploy) Reset() {
	*x = ResponseDeploy{}
	mi := &file_client_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseDeploy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseDeploy) ProtoMessage() {}

func (x *ResponseDeploy) ProtoReflect() protoreflect.Message {
	mi := &file_client_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseDeploy.ProtoReflect.Descriptor instead.
func (*ResponseDeploy) Descriptor() ([]byte, []int) {
	return file_client_response_proto_rawDescGZIP(), []int{0}
}

func (x *ResponseDeploy) GetFiles() string {
	if x != nil {
		return x.Files
	}
	return ""
}

func (x *ResponseDeploy) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *ResponseDeploy) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *ResponseDeploy) GetDownstreamAddress() string {
	if x != nil {
		return x.DownstreamAddress
	}
	return ""
}

func (x *ResponseDeploy) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ResponseDeploy) GetInterfaceId() string {
	if x != nil {
		return x.InterfaceId
	}
	return ""
}

func (x *ResponseDeploy) GetIpMode() string {
	if x != nil {
		return x.IpMode
	}
	return ""
}

func (x *ResponseDeploy) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ResponseUnDeploy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files             string `protobuf:"bytes,1,opt,name=files,proto3" json:"files,omitempty"`
	Service           string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Network           string `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
	DownstreamAddress string `protobuf:"bytes,4,opt,name=downstream_address,json=downstreamAddress,proto3" json:"downstream_address,omitempty"`
	Port              uint32 `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	InterfaceId       string `protobuf:"bytes,6,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	IpMode            string `protobuf:"bytes,7,opt,name=ip_mode,json=ipMode,proto3" json:"ip_mode,omitempty"`
	Version           string `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ResponseUnDeploy) Reset() {
	*x = ResponseUnDeploy{}
	mi := &file_client_response_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseUnDeploy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUnDeploy) ProtoMessage() {}

func (x *ResponseUnDeploy) ProtoReflect() protoreflect.Message {
	mi := &file_client_response_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUnDeploy.ProtoReflect.Descriptor instead.
func (*ResponseUnDeploy) Descriptor() ([]byte, []int) {
	return file_client_response_proto_rawDescGZIP(), []int{1}
}

func (x *ResponseUnDeploy) GetFiles() string {
	if x != nil {
		return x.Files
	}
	return ""
}

func (x *ResponseUnDeploy) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *ResponseUnDeploy) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *ResponseUnDeploy) GetDownstreamAddress() string {
	if x != nil {
		return x.DownstreamAddress
	}
	return ""
}

func (x *ResponseUnDeploy) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ResponseUnDeploy) GetInterfaceId() string {
	if x != nil {
		return x.InterfaceId
	}
	return ""
}

func (x *ResponseUnDeploy) GetIpMode() string {
	if x != nil {
		return x.IpMode
	}
	return ""
}

func (x *ResponseUnDeploy) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ResponseUpdateBootstrap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ResponseUpdateBootstrap) Reset() {
	*x = ResponseUpdateBootstrap{}
	mi := &file_client_response_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseUpdateBootstrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUpdateBootstrap) ProtoMessage() {}

func (x *ResponseUpdateBootstrap) ProtoReflect() protoreflect.Message {
	mi := &file_client_response_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUpdateBootstrap.ProtoReflect.Descriptor instead.
func (*ResponseUpdateBootstrap) Descriptor() ([]byte, []int) {
	return file_client_response_proto_rawDescGZIP(), []int{2}
}

func (x *ResponseUpdateBootstrap) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ResponseService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status *ServiceStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Logs   []*Logs        `protobuf:"bytes,3,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *ResponseService) Reset() {
	*x = ResponseService{}
	mi := &file_client_response_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseService) ProtoMessage() {}

func (x *ResponseService) ProtoReflect() protoreflect.Message {
	mi := &file_client_response_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseService.ProtoReflect.Descriptor instead.
func (*ResponseService) Descriptor() ([]byte, []int) {
	return file_client_response_proto_rawDescGZIP(), []int{3}
}

func (x *ResponseService) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResponseService) GetStatus() *ServiceStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ResponseService) GetLogs() []*Logs {
	if x != nil {
		return x.Logs
	}
	return nil
}

type ServiceStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Loaded  string   `protobuf:"bytes,1,opt,name=loaded,proto3" json:"loaded,omitempty"`
	Active  string   `protobuf:"bytes,2,opt,name=active,proto3" json:"active,omitempty"`
	MainPid string   `protobuf:"bytes,3,opt,name=main_pid,json=mainPid,proto3" json:"main_pid,omitempty"`
	Tasks   string   `protobuf:"bytes,4,opt,name=tasks,proto3" json:"tasks,omitempty"`
	Memory  string   `protobuf:"bytes,5,opt,name=memory,proto3" json:"memory,omitempty"`
	Cpu     string   `protobuf:"bytes,6,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Cgroup  []string `protobuf:"bytes,7,rep,name=cgroup,proto3" json:"cgroup,omitempty"`
}

func (x *ServiceStatus) Reset() {
	*x = ServiceStatus{}
	mi := &file_client_response_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceStatus) ProtoMessage() {}

func (x *ServiceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_client_response_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceStatus.ProtoReflect.Descriptor instead.
func (*ServiceStatus) Descriptor() ([]byte, []int) {
	return file_client_response_proto_rawDescGZIP(), []int{4}
}

func (x *ServiceStatus) GetLoaded() string {
	if x != nil {
		return x.Loaded
	}
	return ""
}

func (x *ServiceStatus) GetActive() string {
	if x != nil {
		return x.Active
	}
	return ""
}

func (x *ServiceStatus) GetMainPid() string {
	if x != nil {
		return x.MainPid
	}
	return ""
}

func (x *ServiceStatus) GetTasks() string {
	if x != nil {
		return x.Tasks
	}
	return ""
}

func (x *ServiceStatus) GetMemory() string {
	if x != nil {
		return x.Memory
	}
	return ""
}

func (x *ServiceStatus) GetCpu() string {
	if x != nil {
		return x.Cpu
	}
	return ""
}

func (x *ServiceStatus) GetCgroup() []string {
	if x != nil {
		return x.Cgroup
	}
	return nil
}

type Logs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message   string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Level     string `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`
	Component string `protobuf:"bytes,3,opt,name=component,proto3" json:"component,omitempty"`
	Timestamp string `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Logs) Reset() {
	*x = Logs{}
	mi := &file_client_response_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Logs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logs) ProtoMessage() {}

func (x *Logs) ProtoReflect() protoreflect.Message {
	mi := &file_client_response_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logs.ProtoReflect.Descriptor instead.
func (*Logs) Descriptor() ([]byte, []int) {
	return file_client_response_proto_rawDescGZIP(), []int{5}
}

func (x *Logs) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Logs) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *Logs) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *Logs) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type ResponseEnvoyAdmin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32             `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Body       string            `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Headers    map[string]string `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ResponseEnvoyAdmin) Reset() {
	*x = ResponseEnvoyAdmin{}
	mi := &file_client_response_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseEnvoyAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseEnvoyAdmin) ProtoMessage() {}

func (x *ResponseEnvoyAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_client_response_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseEnvoyAdmin.ProtoReflect.Descriptor instead.
func (*ResponseEnvoyAdmin) Descriptor() ([]byte, []int) {
	return file_client_response_proto_rawDescGZIP(), []int{6}
}

func (x *ResponseEnvoyAdmin) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *ResponseEnvoyAdmin) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *ResponseEnvoyAdmin) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

type GeneralLogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message   string            `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Level     string            `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`
	Module    string            `protobuf:"bytes,3,opt,name=module,proto3" json:"module,omitempty"`
	Timestamp string            `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	File      string            `protobuf:"bytes,5,opt,name=file,proto3" json:"file,omitempty"`
	Metadata  map[string]string `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GeneralLogs) Reset() {
	*x = GeneralLogs{}
	mi := &file_client_response_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeneralLogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralLogs) ProtoMessage() {}

func (x *GeneralLogs) ProtoReflect() protoreflect.Message {
	mi := &file_client_response_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralLogs.ProtoReflect.Descriptor instead.
func (*GeneralLogs) Descriptor() ([]byte, []int) {
	return file_client_response_proto_rawDescGZIP(), []int{7}
}

func (x *GeneralLogs) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GeneralLogs) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *GeneralLogs) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *GeneralLogs) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *GeneralLogs) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *GeneralLogs) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ResponseGeneralLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logs []*GeneralLogs `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *ResponseGeneralLog) Reset() {
	*x = ResponseGeneralLog{}
	mi := &file_client_response_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseGeneralLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGeneralLog) ProtoMessage() {}

func (x *ResponseGeneralLog) ProtoReflect() protoreflect.Message {
	mi := &file_client_response_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGeneralLog.ProtoReflect.Descriptor instead.
func (*ResponseGeneralLog) Descriptor() ([]byte, []int) {
	return file_client_response_proto_rawDescGZIP(), []int{8}
}

func (x *ResponseGeneralLog) GetLogs() []*GeneralLogs {
	if x != nil {
		return x.Logs
	}
	return nil
}

type ResponseClientStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu     *CPUStats     `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory  *MemoryStats  `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Disk    []*DiskStats  `protobuf:"bytes,3,rep,name=disk,proto3" json:"disk,omitempty"`
	Network *NetworkStats `protobuf:"bytes,4,opt,name=network,proto3" json:"network,omitempty"`
	System  *SystemInfo   `protobuf:"bytes,5,opt,name=system,proto3" json:"system,omitempty"`
}

func (x *ResponseClientStats) Reset() {
	*x = ResponseClientStats{}
	mi := &file_client_response_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseClientStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseClientStats) ProtoMessage() {}

func (x *ResponseClientStats) ProtoReflect() protoreflect.Message {
	mi := &file_client_response_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseClientStats.ProtoReflect.Descriptor instead.
func (*ResponseClientStats) Descriptor() ([]byte, []int) {
	return file_client_response_proto_rawDescGZIP(), []int{9}
}

func (x *ResponseClientStats) GetCpu() *CPUStats {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *ResponseClientStats) GetMemory() *MemoryStats {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *ResponseClientStats) GetDisk() []*DiskStats {
	if x != nil {
		return x.Disk
	}
	return nil
}

func (x *ResponseClientStats) GetNetwork() *NetworkStats {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *ResponseClientStats) GetSystem() *SystemInfo {
	if x != nil {
		return x.System
	}
	return nil
}

type ResponseNetwork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool          `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message      string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	NetworkState *NetworkState `protobuf:"bytes,3,opt,name=network_state,json=networkState,proto3" json:"network_state,omitempty"`
	CurrentYaml  string        `protobuf:"bytes,4,opt,name=current_yaml,json=currentYaml,proto3" json:"current_yaml,omitempty"`
}

func (x *ResponseNetwork) Reset() {
	*x = ResponseNetwork{}
	mi := &file_client_response_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseNetwork) ProtoMessage() {}

func (x *ResponseNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_client_response_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseNetwork.ProtoReflect.Descriptor instead.
func (*ResponseNetwork) Descriptor() ([]byte, []int) {
	return file_client_response_proto_rawDescGZIP(), []int{10}
}

func (x *ResponseNetwork) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResponseNetwork) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ResponseNetwork) GetNetworkState() *NetworkState {
	if x != nil {
		return x.NetworkState
	}
	return nil
}

func (x *ResponseNetwork) GetCurrentYaml() string {
	if x != nil {
		return x.CurrentYaml
	}
	return ""
}

type ResponseFrr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol FrrProtocolType `protobuf:"varint,1,opt,name=protocol,proto3,enum=client.FrrProtocolType" json:"protocol,omitempty"`
	Success  bool            `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message  string          `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Bgp      *ResponseBgp    `protobuf:"bytes,4,opt,name=bgp,proto3" json:"bgp,omitempty"`
}

func (x *ResponseFrr) Reset() {
	*x = ResponseFrr{}
	mi := &file_client_response_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseFrr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseFrr) ProtoMessage() {}

func (x *ResponseFrr) ProtoReflect() protoreflect.Message {
	mi := &file_client_response_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseFrr.ProtoReflect.Descriptor instead.
func (*ResponseFrr) Descriptor() ([]byte, []int) {
	return file_client_response_proto_rawDescGZIP(), []int{11}
}

func (x *ResponseFrr) GetProtocol() FrrProtocolType {
	if x != nil {
		return x.Protocol
	}
	return FrrProtocolType_FRR_PROTOCOL_UNKNOWN
}

func (x *ResponseFrr) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResponseFrr) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ResponseFrr) GetBgp() *ResponseBgp {
	if x != nil {
		return x.Bgp
	}
	return nil
}

type ResponseEnvoyVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownloadedVersions []string      `protobuf:"bytes,1,rep,name=downloaded_versions,json=downloadedVersions,proto3" json:"downloaded_versions,omitempty"`
	InstalledVersion   string        `protobuf:"bytes,2,opt,name=installed_version,json=installedVersion,proto3" json:"installed_version,omitempty"`
	DownloadPath       string        `protobuf:"bytes,3,opt,name=download_path,json=downloadPath,proto3" json:"download_path,omitempty"`
	Status             VersionStatus `protobuf:"varint,4,opt,name=status,proto3,enum=client.VersionStatus" json:"status,omitempty"`
	ErrorMessage       string        `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *ResponseEnvoyVersion) Reset() {
	*x = ResponseEnvoyVersion{}
	mi := &file_client_response_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseEnvoyVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseEnvoyVersion) ProtoMessage() {}

func (x *ResponseEnvoyVersion) ProtoReflect() protoreflect.Message {
	mi := &file_client_response_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseEnvoyVersion.ProtoReflect.Descriptor instead.
func (*ResponseEnvoyVersion) Descriptor() ([]byte, []int) {
	return file_client_response_proto_rawDescGZIP(), []int{12}
}

func (x *ResponseEnvoyVersion) GetDownloadedVersions() []string {
	if x != nil {
		return x.DownloadedVersions
	}
	return nil
}

func (x *ResponseEnvoyVersion) GetInstalledVersion() string {
	if x != nil {
		return x.InstalledVersion
	}
	return ""
}

func (x *ResponseEnvoyVersion) GetDownloadPath() string {
	if x != nil {
		return x.DownloadPath
	}
	return ""
}

func (x *ResponseEnvoyVersion) GetStatus() VersionStatus {
	if x != nil {
		return x.Status
	}
	return VersionStatus_SUCCESS
}

func (x *ResponseEnvoyVersion) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type ResponseWafVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownloadedVersions []string      `protobuf:"bytes,1,rep,name=downloaded_versions,json=downloadedVersions,proto3" json:"downloaded_versions,omitempty"`
	InstalledVersion   string        `protobuf:"bytes,2,opt,name=installed_version,json=installedVersion,proto3" json:"installed_version,omitempty"`
	DownloadPath       string        `protobuf:"bytes,3,opt,name=download_path,json=downloadPath,proto3" json:"download_path,omitempty"`
	Status             VersionStatus `protobuf:"varint,4,opt,name=status,proto3,enum=client.VersionStatus" json:"status,omitempty"`
	ErrorMessage       string        `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *ResponseWafVersion) Reset() {
	*x = ResponseWafVersion{}
	mi := &file_client_response_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseWafVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseWafVersion) ProtoMessage() {}

func (x *ResponseWafVersion) ProtoReflect() protoreflect.Message {
	mi := &file_client_response_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseWafVersion.ProtoReflect.Descriptor instead.
func (*ResponseWafVersion) Descriptor() ([]byte, []int) {
	return file_client_response_proto_rawDescGZIP(), []int{13}
}

func (x *ResponseWafVersion) GetDownloadedVersions() []string {
	if x != nil {
		return x.DownloadedVersions
	}
	return nil
}

func (x *ResponseWafVersion) GetInstalledVersion() string {
	if x != nil {
		return x.InstalledVersion
	}
	return ""
}

func (x *ResponseWafVersion) GetDownloadPath() string {
	if x != nil {
		return x.DownloadPath
	}
	return ""
}

func (x *ResponseWafVersion) GetStatus() VersionStatus {
	if x != nil {
		return x.Status
	}
	return VersionStatus_SUCCESS
}

func (x *ResponseWafVersion) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_client_response_proto protoreflect.FileDescriptor

var file_client_response_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a,
	0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2f, 0x66, 0x72, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf3, 0x01, 0x0a, 0x0e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x2d, 0x0a, 0x12, 0x64, 0x6f, 0x77, 0x6e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x70, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x69, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0xf5, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x6e,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x12, 0x2d, 0x0a, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x6f,
	0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x70, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x2d, 0x0a, 0x17, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x76, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20,
	0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73,
	0x22, 0xb2, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x69, 0x6e, 0x50, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x70, 0x75, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x72, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xc8, 0x01, 0x0a, 0x12, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x41, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x83, 0x02, 0x0a, 0x0b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x4c, 0x6f, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x3d,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x4c, 0x6f, 0x67, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a,
	0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3d, 0x0a, 0x12, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x4c, 0x6f, 0x67,
	0x12, 0x27, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x4c,
	0x6f, 0x67, 0x73, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0xe9, 0x01, 0x0a, 0x13, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x22, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x50, 0x55, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x2b, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x69, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x04, 0x64, 0x69, 0x73, 0x6b, 0x12, 0x2e, 0x0a, 0x07, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0xa3, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a,
	0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x59, 0x61, 0x6d, 0x6c, 0x22, 0x9d, 0x01, 0x0a, 0x0b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x72, 0x72, 0x12, 0x33, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x72, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x03, 0x62, 0x67, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x67, 0x70, 0x52, 0x03, 0x62, 0x67, 0x70, 0x22, 0xed, 0x01, 0x0a, 0x14,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x13, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xeb, 0x01, 0x0a, 0x12,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x57, 0x61, 0x66, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x13, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2a, 0x9e, 0x01, 0x0a, 0x0d, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x4f, 0x57, 0x4e,
	0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x15, 0x0a,
	0x11, 0x45, 0x58, 0x54, 0x52, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49,
	0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x56,
	0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x4f,
	0x52, 0x59, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x06, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x2f, 0x65, 0x6c, 0x63, 0x68, 0x69, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_client_response_proto_rawDescOnce sync.Once
	file_client_response_proto_rawDescData = file_client_response_proto_rawDesc
)

func file_client_response_proto_rawDescGZIP() []byte {
	file_client_response_proto_rawDescOnce.Do(func() {
		file_client_response_proto_rawDescData = protoimpl.X.CompressGZIP(file_client_response_proto_rawDescData)
	})
	return file_client_response_proto_rawDescData
}

var file_client_response_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_client_response_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_client_response_proto_goTypes = []any{
	(VersionStatus)(0),              // 0: client.VersionStatus
	(*ResponseDeploy)(nil),          // 1: client.ResponseDeploy
	(*ResponseUnDeploy)(nil),        // 2: client.ResponseUnDeploy
	(*ResponseUpdateBootstrap)(nil), // 3: client.ResponseUpdateBootstrap
	(*ResponseService)(nil),         // 4: client.ResponseService
	(*ServiceStatus)(nil),           // 5: client.ServiceStatus
	(*Logs)(nil),                    // 6: client.Logs
	(*ResponseEnvoyAdmin)(nil),      // 7: client.ResponseEnvoyAdmin
	(*GeneralLogs)(nil),             // 8: client.GeneralLogs
	(*ResponseGeneralLog)(nil),      // 9: client.ResponseGeneralLog
	(*ResponseClientStats)(nil),     // 10: client.ResponseClientStats
	(*ResponseNetwork)(nil),         // 11: client.ResponseNetwork
	(*ResponseFrr)(nil),             // 12: client.ResponseFrr
	(*ResponseEnvoyVersion)(nil),    // 13: client.ResponseEnvoyVersion
	(*ResponseWafVersion)(nil),      // 14: client.ResponseWafVersion
	nil,                             // 15: client.ResponseEnvoyAdmin.HeadersEntry
	nil,                             // 16: client.GeneralLogs.MetadataEntry
	(*CPUStats)(nil),                // 17: client.CPUStats
	(*MemoryStats)(nil),             // 18: client.MemoryStats
	(*DiskStats)(nil),               // 19: client.DiskStats
	(*NetworkStats)(nil),            // 20: client.NetworkStats
	(*SystemInfo)(nil),              // 21: client.SystemInfo
	(*NetworkState)(nil),            // 22: client.NetworkState
	(FrrProtocolType)(0),            // 23: client.FrrProtocolType
	(*ResponseBgp)(nil),             // 24: client.ResponseBgp
}
var file_client_response_proto_depIdxs = []int32{
	5,  // 0: client.ResponseService.status:type_name -> client.ServiceStatus
	6,  // 1: client.ResponseService.logs:type_name -> client.Logs
	15, // 2: client.ResponseEnvoyAdmin.headers:type_name -> client.ResponseEnvoyAdmin.HeadersEntry
	16, // 3: client.GeneralLogs.metadata:type_name -> client.GeneralLogs.MetadataEntry
	8,  // 4: client.ResponseGeneralLog.logs:type_name -> client.GeneralLogs
	17, // 5: client.ResponseClientStats.cpu:type_name -> client.CPUStats
	18, // 6: client.ResponseClientStats.memory:type_name -> client.MemoryStats
	19, // 7: client.ResponseClientStats.disk:type_name -> client.DiskStats
	20, // 8: client.ResponseClientStats.network:type_name -> client.NetworkStats
	21, // 9: client.ResponseClientStats.system:type_name -> client.SystemInfo
	22, // 10: client.ResponseNetwork.network_state:type_name -> client.NetworkState
	23, // 11: client.ResponseFrr.protocol:type_name -> client.FrrProtocolType
	24, // 12: client.ResponseFrr.bgp:type_name -> client.ResponseBgp
	0,  // 13: client.ResponseEnvoyVersion.status:type_name -> client.VersionStatus
	0,  // 14: client.ResponseWafVersion.status:type_name -> client.VersionStatus
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_client_response_proto_init() }
func file_client_response_proto_init() {
	if File_client_response_proto != nil {
		return
	}
	file_client_stats_proto_init()
	file_client_network_proto_init()
	file_client_frr_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_client_response_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_client_response_proto_goTypes,
		DependencyIndexes: file_client_response_proto_depIdxs,
		EnumInfos:         file_client_response_proto_enumTypes,
		MessageInfos:      file_client_response_proto_msgTypes,
	}.Build()
	File_client_response_proto = out.File
	file_client_response_proto_rawDesc = nil
	file_client_response_proto_goTypes = nil
	file_client_response_proto_depIdxs = nil
}
