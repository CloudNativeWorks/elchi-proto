// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: client/network.proto

package client

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RouteOperation_Action int32

const (
	RouteOperation_ADD     RouteOperation_Action = 0
	RouteOperation_DELETE  RouteOperation_Action = 1
	RouteOperation_REPLACE RouteOperation_Action = 2
)

// Enum value maps for RouteOperation_Action.
var (
	RouteOperation_Action_name = map[int32]string{
		0: "ADD",
		1: "DELETE",
		2: "REPLACE",
	}
	RouteOperation_Action_value = map[string]int32{
		"ADD":     0,
		"DELETE":  1,
		"REPLACE": 2,
	}
)

func (x RouteOperation_Action) Enum() *RouteOperation_Action {
	p := new(RouteOperation_Action)
	*p = x
	return p
}

func (x RouteOperation_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RouteOperation_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_client_network_proto_enumTypes[0].Descriptor()
}

func (RouteOperation_Action) Type() protoreflect.EnumType {
	return &file_client_network_proto_enumTypes[0]
}

func (x RouteOperation_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RouteOperation_Action.Descriptor instead.
func (RouteOperation_Action) EnumDescriptor() ([]byte, []int) {
	return file_client_network_proto_rawDescGZIP(), []int{4, 0}
}

type RoutingPolicyOperation_Action int32

const (
	RoutingPolicyOperation_ADD     RoutingPolicyOperation_Action = 0
	RoutingPolicyOperation_DELETE  RoutingPolicyOperation_Action = 1
	RoutingPolicyOperation_REPLACE RoutingPolicyOperation_Action = 2
)

// Enum value maps for RoutingPolicyOperation_Action.
var (
	RoutingPolicyOperation_Action_name = map[int32]string{
		0: "ADD",
		1: "DELETE",
		2: "REPLACE",
	}
	RoutingPolicyOperation_Action_value = map[string]int32{
		"ADD":     0,
		"DELETE":  1,
		"REPLACE": 2,
	}
)

func (x RoutingPolicyOperation_Action) Enum() *RoutingPolicyOperation_Action {
	p := new(RoutingPolicyOperation_Action)
	*p = x
	return p
}

func (x RoutingPolicyOperation_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoutingPolicyOperation_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_client_network_proto_enumTypes[1].Descriptor()
}

func (RoutingPolicyOperation_Action) Type() protoreflect.EnumType {
	return &file_client_network_proto_enumTypes[1]
}

func (x RoutingPolicyOperation_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoutingPolicyOperation_Action.Descriptor instead.
func (RoutingPolicyOperation_Action) EnumDescriptor() ([]byte, []int) {
	return file_client_network_proto_rawDescGZIP(), []int{5, 0}
}

type TableOperation_Action int32

const (
	TableOperation_ADD     TableOperation_Action = 0
	TableOperation_DELETE  TableOperation_Action = 1
	TableOperation_REPLACE TableOperation_Action = 2
)

// Enum value maps for TableOperation_Action.
var (
	TableOperation_Action_name = map[int32]string{
		0: "ADD",
		1: "DELETE",
		2: "REPLACE",
	}
	TableOperation_Action_value = map[string]int32{
		"ADD":     0,
		"DELETE":  1,
		"REPLACE": 2,
	}
)

func (x TableOperation_Action) Enum() *TableOperation_Action {
	p := new(TableOperation_Action)
	*p = x
	return p
}

func (x TableOperation_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TableOperation_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_client_network_proto_enumTypes[2].Descriptor()
}

func (TableOperation_Action) Type() protoreflect.EnumType {
	return &file_client_network_proto_enumTypes[2]
}

func (x TableOperation_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TableOperation_Action.Descriptor instead.
func (TableOperation_Action) EnumDescriptor() ([]byte, []int) {
	return file_client_network_proto_rawDescGZIP(), []int{6, 0}
}

// Netplan YAML-based interface configuration
type NetplanConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	YamlContent                  string `protobuf:"bytes,1,opt,name=yaml_content,json=yamlContent,proto3" json:"yaml_content,omitempty"`                                                       // Full netplan YAML content
	TestMode                     bool   `protobuf:"varint,2,opt,name=test_mode,json=testMode,proto3" json:"test_mode,omitempty"`                                                               // Apply with test (rollback on failure)
	TestTimeoutSeconds           uint32 `protobuf:"varint,3,opt,name=test_timeout_seconds,json=testTimeoutSeconds,proto3" json:"test_timeout_seconds,omitempty"`                               // Custom timeout in seconds (default: 10)
	PreserveControllerConnection bool   `protobuf:"varint,4,opt,name=preserve_controller_connection,json=preserveControllerConnection,proto3" json:"preserve_controller_connection,omitempty"` // Monitor and preserve controller connection
}

func (x *NetplanConfig) Reset() {
	*x = NetplanConfig{}
	mi := &file_client_network_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetplanConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetplanConfig) ProtoMessage() {}

func (x *NetplanConfig) ProtoReflect() protoreflect.Message {
	mi := &file_client_network_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetplanConfig.ProtoReflect.Descriptor instead.
func (*NetplanConfig) Descriptor() ([]byte, []int) {
	return file_client_network_proto_rawDescGZIP(), []int{0}
}

func (x *NetplanConfig) GetYamlContent() string {
	if x != nil {
		return x.YamlContent
	}
	return ""
}

func (x *NetplanConfig) GetTestMode() bool {
	if x != nil {
		return x.TestMode
	}
	return false
}

func (x *NetplanConfig) GetTestTimeoutSeconds() uint32 {
	if x != nil {
		return x.TestTimeoutSeconds
	}
	return 0
}

func (x *NetplanConfig) GetPreserveControllerConnection() bool {
	if x != nil {
		return x.PreserveControllerConnection
	}
	return false
}

// Route management - independent from interface management
type Route struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To        string `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`                                 // Destination (e.g., "0.0.0.0/0", "10.0.0.0/24")
	Via       string `protobuf:"bytes,2,opt,name=via,proto3" json:"via,omitempty"`                               // Gateway IP
	Interface string `protobuf:"bytes,3,opt,name=interface,proto3" json:"interface,omitempty"`                   // Interface name (e.g., "eth0")
	Table     uint32 `protobuf:"varint,4,opt,name=table,proto3" json:"table,omitempty"`                          // Routing table ID (optional, default: main)
	Metric    uint32 `protobuf:"varint,5,opt,name=metric,proto3" json:"metric,omitempty"`                        // Route metric
	Source    string `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"`                         // Source IP for this route
	Scope     string `protobuf:"bytes,7,opt,name=scope,proto3" json:"scope,omitempty"`                           // Route scope (e.g., "global", "link", "host")
	IsDefault bool   `protobuf:"varint,8,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"` // Is this a default route
	Protocol  string `protobuf:"bytes,9,opt,name=protocol,proto3" json:"protocol,omitempty"`                     // Route protocol (e.g., "kernel", "static", "bgp", "ospf")
	Onlink    bool   `protobuf:"varint,10,opt,name=onlink,proto3" json:"onlink,omitempty"`
}

func (x *Route) Reset() {
	*x = Route{}
	mi := &file_client_network_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_client_network_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_client_network_proto_rawDescGZIP(), []int{1}
}

func (x *Route) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Route) GetVia() string {
	if x != nil {
		return x.Via
	}
	return ""
}

func (x *Route) GetInterface() string {
	if x != nil {
		return x.Interface
	}
	return ""
}

func (x *Route) GetTable() uint32 {
	if x != nil {
		return x.Table
	}
	return 0
}

func (x *Route) GetMetric() uint32 {
	if x != nil {
		return x.Metric
	}
	return 0
}

func (x *Route) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Route) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *Route) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *Route) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *Route) GetOnlink() bool {
	if x != nil {
		return x.Onlink
	}
	return false
}

// Policy-based routing rule - independent management
type RoutingPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From      string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`           // Source address/network
	To        string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`               // Destination address/network (optional)
	Table     uint32 `protobuf:"varint,3,opt,name=table,proto3" json:"table,omitempty"`        // Routing table ID
	Priority  uint32 `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`  // Rule priority (lower = higher priority)
	Interface string `protobuf:"bytes,5,opt,name=interface,proto3" json:"interface,omitempty"` // Interface name for netplan (optional)
}

func (x *RoutingPolicy) Reset() {
	*x = RoutingPolicy{}
	mi := &file_client_network_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoutingPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingPolicy) ProtoMessage() {}

func (x *RoutingPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_client_network_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingPolicy.ProtoReflect.Descriptor instead.
func (*RoutingPolicy) Descriptor() ([]byte, []int) {
	return file_client_network_proto_rawDescGZIP(), []int{2}
}

func (x *RoutingPolicy) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *RoutingPolicy) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *RoutingPolicy) GetTable() uint32 {
	if x != nil {
		return x.Table
	}
	return 0
}

func (x *RoutingPolicy) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *RoutingPolicy) GetInterface() string {
	if x != nil {
		return x.Interface
	}
	return ""
}

// Routing table definition for system routing tables
type RoutingTableDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`    // Table ID (1-252, 253-255 are reserved)
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // Table name (e.g., "mgmt", "production")
}

func (x *RoutingTableDefinition) Reset() {
	*x = RoutingTableDefinition{}
	mi := &file_client_network_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoutingTableDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingTableDefinition) ProtoMessage() {}

func (x *RoutingTableDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_client_network_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingTableDefinition.ProtoReflect.Descriptor instead.
func (*RoutingTableDefinition) Descriptor() ([]byte, []int) {
	return file_client_network_proto_rawDescGZIP(), []int{3}
}

func (x *RoutingTableDefinition) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoutingTableDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Route operations (add/delete/replace)
type RouteOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action RouteOperation_Action `protobuf:"varint,1,opt,name=action,proto3,enum=client.RouteOperation_Action" json:"action,omitempty"`
	Route  *Route                `protobuf:"bytes,2,opt,name=route,proto3" json:"route,omitempty"`
}

func (x *RouteOperation) Reset() {
	*x = RouteOperation{}
	mi := &file_client_network_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteOperation) ProtoMessage() {}

func (x *RouteOperation) ProtoReflect() protoreflect.Message {
	mi := &file_client_network_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteOperation.ProtoReflect.Descriptor instead.
func (*RouteOperation) Descriptor() ([]byte, []int) {
	return file_client_network_proto_rawDescGZIP(), []int{4}
}

func (x *RouteOperation) GetAction() RouteOperation_Action {
	if x != nil {
		return x.Action
	}
	return RouteOperation_ADD
}

func (x *RouteOperation) GetRoute() *Route {
	if x != nil {
		return x.Route
	}
	return nil
}

// Routing policy operations (add/delete/replace)
type RoutingPolicyOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action RoutingPolicyOperation_Action `protobuf:"varint,1,opt,name=action,proto3,enum=client.RoutingPolicyOperation_Action" json:"action,omitempty"`
	Policy *RoutingPolicy                `protobuf:"bytes,2,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *RoutingPolicyOperation) Reset() {
	*x = RoutingPolicyOperation{}
	mi := &file_client_network_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoutingPolicyOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingPolicyOperation) ProtoMessage() {}

func (x *RoutingPolicyOperation) ProtoReflect() protoreflect.Message {
	mi := &file_client_network_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingPolicyOperation.ProtoReflect.Descriptor instead.
func (*RoutingPolicyOperation) Descriptor() ([]byte, []int) {
	return file_client_network_proto_rawDescGZIP(), []int{5}
}

func (x *RoutingPolicyOperation) GetAction() RoutingPolicyOperation_Action {
	if x != nil {
		return x.Action
	}
	return RoutingPolicyOperation_ADD
}

func (x *RoutingPolicyOperation) GetPolicy() *RoutingPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

// Routing table operations (add/delete/replace)
type TableOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action TableOperation_Action   `protobuf:"varint,1,opt,name=action,proto3,enum=client.TableOperation_Action" json:"action,omitempty"`
	Table  *RoutingTableDefinition `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
}

func (x *TableOperation) Reset() {
	*x = TableOperation{}
	mi := &file_client_network_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableOperation) ProtoMessage() {}

func (x *TableOperation) ProtoReflect() protoreflect.Message {
	mi := &file_client_network_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableOperation.ProtoReflect.Descriptor instead.
func (*TableOperation) Descriptor() ([]byte, []int) {
	return file_client_network_proto_rawDescGZIP(), []int{6}
}

func (x *TableOperation) GetAction() TableOperation_Action {
	if x != nil {
		return x.Action
	}
	return TableOperation_ADD
}

func (x *TableOperation) GetTable() *RoutingTableDefinition {
	if x != nil {
		return x.Table
	}
	return nil
}

// Network state response
type NetworkState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interfaces         []*InterfaceState         `protobuf:"bytes,1,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	Routes             []*Route                  `protobuf:"bytes,2,rep,name=routes,proto3" json:"routes,omitempty"`
	Policies           []*RoutingPolicy          `protobuf:"bytes,3,rep,name=policies,proto3" json:"policies,omitempty"`
	RoutingTables      []*RoutingTableDefinition `protobuf:"bytes,4,rep,name=routing_tables,json=routingTables,proto3" json:"routing_tables,omitempty"`
	CurrentNetplanYaml string                    `protobuf:"bytes,5,opt,name=current_netplan_yaml,json=currentNetplanYaml,proto3" json:"current_netplan_yaml,omitempty"`
}

func (x *NetworkState) Reset() {
	*x = NetworkState{}
	mi := &file_client_network_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkState) ProtoMessage() {}

func (x *NetworkState) ProtoReflect() protoreflect.Message {
	mi := &file_client_network_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkState.ProtoReflect.Descriptor instead.
func (*NetworkState) Descriptor() ([]byte, []int) {
	return file_client_network_proto_rawDescGZIP(), []int{7}
}

func (x *NetworkState) GetInterfaces() []*InterfaceState {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *NetworkState) GetRoutes() []*Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *NetworkState) GetPolicies() []*RoutingPolicy {
	if x != nil {
		return x.Policies
	}
	return nil
}

func (x *NetworkState) GetRoutingTables() []*RoutingTableDefinition {
	if x != nil {
		return x.RoutingTables
	}
	return nil
}

func (x *NetworkState) GetCurrentNetplanYaml() string {
	if x != nil {
		return x.CurrentNetplanYaml
	}
	return ""
}

// Interface state information
type InterfaceState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                // Interface name
	Addresses  []string `protobuf:"bytes,2,rep,name=addresses,proto3" json:"addresses,omitempty"`                      // Assigned IP addresses
	State      string   `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`                              // Interface state: "up" or "down"
	HasCarrier bool     `protobuf:"varint,4,opt,name=has_carrier,json=hasCarrier,proto3" json:"has_carrier,omitempty"` // Physical link status
	MacAddress string   `protobuf:"bytes,5,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`  // MAC address
	Mtu        uint32   `protobuf:"varint,6,opt,name=mtu,proto3" json:"mtu,omitempty"`                                 // MTU size
}

func (x *InterfaceState) Reset() {
	*x = InterfaceState{}
	mi := &file_client_network_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterfaceState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceState) ProtoMessage() {}

func (x *InterfaceState) ProtoReflect() protoreflect.Message {
	mi := &file_client_network_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceState.ProtoReflect.Descriptor instead.
func (*InterfaceState) Descriptor() ([]byte, []int) {
	return file_client_network_proto_rawDescGZIP(), []int{8}
}

func (x *InterfaceState) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InterfaceState) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *InterfaceState) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *InterfaceState) GetHasCarrier() bool {
	if x != nil {
		return x.HasCarrier
	}
	return false
}

func (x *InterfaceState) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *InterfaceState) GetMtu() uint32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

var File_client_network_proto protoreflect.FileDescriptor

var file_client_network_proto_rawDesc = []byte{
	0x0a, 0x14, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0xc7,
	0x01, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x21, 0x0a, 0x0c, 0x79, 0x61, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x79, 0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x30, 0x0a, 0x14, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12,
	0x74, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x44, 0x0a, 0x1e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf6, 0x01, 0x0a, 0x05, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x74, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x76, 0x69, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x6b, 0x22, 0x83, 0x01, 0x0a, 0x0d, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x22, 0x3c, 0x0a, 0x16, 0x52, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x0e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x23, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x05, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x22, 0x2a, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x07,
	0x0a, 0x03, 0x41, 0x44, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54,
	0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x10, 0x02,
	0x22, 0xb2, 0x01, 0x0a, 0x16, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x06, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x2a, 0x0a, 0x06, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x44, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x50, 0x4c,
	0x41, 0x43, 0x45, 0x10, 0x02, 0x22, 0xa9, 0x01, 0x0a, 0x0e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x34, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x2a, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x44, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x10,
	0x02, 0x22, 0x99, 0x02, 0x0a, 0x0c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0a,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x31, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x79,
	0x61, 0x6d, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x4e, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x6e, 0x59, 0x61, 0x6d, 0x6c, 0x22, 0xac, 0x01,
	0x0a, 0x0e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x5f,
	0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68,
	0x61, 0x73, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x74,
	0x75, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x74, 0x75, 0x42, 0x30, 0x5a, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x2f, 0x65, 0x6c, 0x63, 0x68,
	0x69, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_client_network_proto_rawDescOnce sync.Once
	file_client_network_proto_rawDescData = file_client_network_proto_rawDesc
)

func file_client_network_proto_rawDescGZIP() []byte {
	file_client_network_proto_rawDescOnce.Do(func() {
		file_client_network_proto_rawDescData = protoimpl.X.CompressGZIP(file_client_network_proto_rawDescData)
	})
	return file_client_network_proto_rawDescData
}

var file_client_network_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_client_network_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_client_network_proto_goTypes = []any{
	(RouteOperation_Action)(0),         // 0: client.RouteOperation.Action
	(RoutingPolicyOperation_Action)(0), // 1: client.RoutingPolicyOperation.Action
	(TableOperation_Action)(0),         // 2: client.TableOperation.Action
	(*NetplanConfig)(nil),              // 3: client.NetplanConfig
	(*Route)(nil),                      // 4: client.Route
	(*RoutingPolicy)(nil),              // 5: client.RoutingPolicy
	(*RoutingTableDefinition)(nil),     // 6: client.RoutingTableDefinition
	(*RouteOperation)(nil),             // 7: client.RouteOperation
	(*RoutingPolicyOperation)(nil),     // 8: client.RoutingPolicyOperation
	(*TableOperation)(nil),             // 9: client.TableOperation
	(*NetworkState)(nil),               // 10: client.NetworkState
	(*InterfaceState)(nil),             // 11: client.InterfaceState
}
var file_client_network_proto_depIdxs = []int32{
	0,  // 0: client.RouteOperation.action:type_name -> client.RouteOperation.Action
	4,  // 1: client.RouteOperation.route:type_name -> client.Route
	1,  // 2: client.RoutingPolicyOperation.action:type_name -> client.RoutingPolicyOperation.Action
	5,  // 3: client.RoutingPolicyOperation.policy:type_name -> client.RoutingPolicy
	2,  // 4: client.TableOperation.action:type_name -> client.TableOperation.Action
	6,  // 5: client.TableOperation.table:type_name -> client.RoutingTableDefinition
	11, // 6: client.NetworkState.interfaces:type_name -> client.InterfaceState
	4,  // 7: client.NetworkState.routes:type_name -> client.Route
	5,  // 8: client.NetworkState.policies:type_name -> client.RoutingPolicy
	6,  // 9: client.NetworkState.routing_tables:type_name -> client.RoutingTableDefinition
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_client_network_proto_init() }
func file_client_network_proto_init() {
	if File_client_network_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_client_network_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_client_network_proto_goTypes,
		DependencyIndexes: file_client_network_proto_depIdxs,
		EnumInfos:         file_client_network_proto_enumTypes,
		MessageInfos:      file_client_network_proto_msgTypes,
	}.Build()
	File_client_network_proto = out.File
	file_client_network_proto_rawDesc = nil
	file_client_network_proto_goTypes = nil
	file_client_network_proto_depIdxs = nil
}
