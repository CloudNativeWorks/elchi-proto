// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: client/filebeat.proto

package client

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Filebeat input configuration
type FilebeatInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`        // Input type (e.g., "filestream")
	Enabled bool     `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"` // Enable/disable input
	Id      string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`            // Unique input ID (e.g., "elchi-logs")
	Paths   []string `protobuf:"bytes,4,rep,name=paths,proto3" json:"paths,omitempty"`      // Log file paths (e.g., ["/var/log/elchi/*.log"])
}

func (x *FilebeatInput) Reset() {
	*x = FilebeatInput{}
	mi := &file_client_filebeat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilebeatInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilebeatInput) ProtoMessage() {}

func (x *FilebeatInput) ProtoReflect() protoreflect.Message {
	mi := &file_client_filebeat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilebeatInput.ProtoReflect.Descriptor instead.
func (*FilebeatInput) Descriptor() ([]byte, []int) {
	return file_client_filebeat_proto_rawDescGZIP(), []int{0}
}

func (x *FilebeatInput) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FilebeatInput) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *FilebeatInput) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FilebeatInput) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

// Timestamp processor configuration
type TimestampProcessor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field   string   `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`     // Field to parse (e.g., "message")
	Layouts []string `protobuf:"bytes,2,rep,name=layouts,proto3" json:"layouts,omitempty"` // Time layouts (e.g., ["[2006-01-02 15:04:05.000]"])
	Test    []string `protobuf:"bytes,3,rep,name=test,proto3" json:"test,omitempty"`       // Test patterns for validation
}

func (x *TimestampProcessor) Reset() {
	*x = TimestampProcessor{}
	mi := &file_client_filebeat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimestampProcessor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimestampProcessor) ProtoMessage() {}

func (x *TimestampProcessor) ProtoReflect() protoreflect.Message {
	mi := &file_client_filebeat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimestampProcessor.ProtoReflect.Descriptor instead.
func (*TimestampProcessor) Descriptor() ([]byte, []int) {
	return file_client_filebeat_proto_rawDescGZIP(), []int{1}
}

func (x *TimestampProcessor) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *TimestampProcessor) GetLayouts() []string {
	if x != nil {
		return x.Layouts
	}
	return nil
}

func (x *TimestampProcessor) GetTest() []string {
	if x != nil {
		return x.Test
	}
	return nil
}

// Drop fields processor configuration
type DropFieldsProcessor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"` // Fields to drop (e.g., ["agent", "input"])
}

func (x *DropFieldsProcessor) Reset() {
	*x = DropFieldsProcessor{}
	mi := &file_client_filebeat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropFieldsProcessor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropFieldsProcessor) ProtoMessage() {}

func (x *DropFieldsProcessor) ProtoReflect() protoreflect.Message {
	mi := &file_client_filebeat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropFieldsProcessor.ProtoReflect.Descriptor instead.
func (*DropFieldsProcessor) Descriptor() ([]byte, []int) {
	return file_client_filebeat_proto_rawDescGZIP(), []int{2}
}

func (x *DropFieldsProcessor) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type FilebeatOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Output:
	//
	//	*FilebeatOutput_Elasticsearch
	//	*FilebeatOutput_Logstash
	Output isFilebeatOutput_Output `protobuf_oneof:"output"`
}

func (x *FilebeatOutput) Reset() {
	*x = FilebeatOutput{}
	mi := &file_client_filebeat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilebeatOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilebeatOutput) ProtoMessage() {}

func (x *FilebeatOutput) ProtoReflect() protoreflect.Message {
	mi := &file_client_filebeat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilebeatOutput.ProtoReflect.Descriptor instead.
func (*FilebeatOutput) Descriptor() ([]byte, []int) {
	return file_client_filebeat_proto_rawDescGZIP(), []int{3}
}

func (m *FilebeatOutput) GetOutput() isFilebeatOutput_Output {
	if m != nil {
		return m.Output
	}
	return nil
}

func (x *FilebeatOutput) GetElasticsearch() *ElasticsearchOutput {
	if x, ok := x.GetOutput().(*FilebeatOutput_Elasticsearch); ok {
		return x.Elasticsearch
	}
	return nil
}

func (x *FilebeatOutput) GetLogstash() *LogstashOutput {
	if x, ok := x.GetOutput().(*FilebeatOutput_Logstash); ok {
		return x.Logstash
	}
	return nil
}

type isFilebeatOutput_Output interface {
	isFilebeatOutput_Output()
}

type FilebeatOutput_Elasticsearch struct {
	Elasticsearch *ElasticsearchOutput `protobuf:"bytes,1,opt,name=elasticsearch,proto3,oneof"`
}

type FilebeatOutput_Logstash struct {
	Logstash *LogstashOutput `protobuf:"bytes,2,opt,name=logstash,proto3,oneof"`
}

func (*FilebeatOutput_Elasticsearch) isFilebeatOutput_Output() {}

func (*FilebeatOutput_Logstash) isFilebeatOutput_Output() {}

type ElasticsearchOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hosts      []string `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`                              // Elasticsearch hosts (e.g., ["http://elasticsearch:9200"])
	SslEnabled bool     `protobuf:"varint,2,opt,name=ssl_enabled,json=sslEnabled,proto3" json:"ssl_enabled,omitempty"` // Enable/disable SSL
	// Authentication method (mutually exclusive)
	//
	// Types that are assignable to Auth:
	//
	//	*ElasticsearchOutput_ApiKey
	//	*ElasticsearchOutput_BasicAuth
	Auth isElasticsearchOutput_Auth `protobuf_oneof:"auth"`
}

func (x *ElasticsearchOutput) Reset() {
	*x = ElasticsearchOutput{}
	mi := &file_client_filebeat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ElasticsearchOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElasticsearchOutput) ProtoMessage() {}

func (x *ElasticsearchOutput) ProtoReflect() protoreflect.Message {
	mi := &file_client_filebeat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElasticsearchOutput.ProtoReflect.Descriptor instead.
func (*ElasticsearchOutput) Descriptor() ([]byte, []int) {
	return file_client_filebeat_proto_rawDescGZIP(), []int{4}
}

func (x *ElasticsearchOutput) GetHosts() []string {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *ElasticsearchOutput) GetSslEnabled() bool {
	if x != nil {
		return x.SslEnabled
	}
	return false
}

func (m *ElasticsearchOutput) GetAuth() isElasticsearchOutput_Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (x *ElasticsearchOutput) GetApiKey() string {
	if x, ok := x.GetAuth().(*ElasticsearchOutput_ApiKey); ok {
		return x.ApiKey
	}
	return ""
}

func (x *ElasticsearchOutput) GetBasicAuth() *BasicAuth {
	if x, ok := x.GetAuth().(*ElasticsearchOutput_BasicAuth); ok {
		return x.BasicAuth
	}
	return nil
}

type isElasticsearchOutput_Auth interface {
	isElasticsearchOutput_Auth()
}

type ElasticsearchOutput_ApiKey struct {
	ApiKey string `protobuf:"bytes,3,opt,name=api_key,json=apiKey,proto3,oneof"` // API key format: "id:api_key"
}

type ElasticsearchOutput_BasicAuth struct {
	BasicAuth *BasicAuth `protobuf:"bytes,4,opt,name=basic_auth,json=basicAuth,proto3,oneof"` // Username + password authentication
}

func (*ElasticsearchOutput_ApiKey) isElasticsearchOutput_Auth() {}

func (*ElasticsearchOutput_BasicAuth) isElasticsearchOutput_Auth() {}

type BasicAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *BasicAuth) Reset() {
	*x = BasicAuth{}
	mi := &file_client_filebeat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BasicAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicAuth) ProtoMessage() {}

func (x *BasicAuth) ProtoReflect() protoreflect.Message {
	mi := &file_client_filebeat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicAuth.ProtoReflect.Descriptor instead.
func (*BasicAuth) Descriptor() ([]byte, []int) {
	return file_client_filebeat_proto_rawDescGZIP(), []int{5}
}

func (x *BasicAuth) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *BasicAuth) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LogstashOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hosts       []string `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`              // Logstash hosts (e.g., ["logstash:5044"])
	Loadbalance bool     `protobuf:"varint,3,opt,name=loadbalance,proto3" json:"loadbalance,omitempty"` // Enable load balancing across hosts
}

func (x *LogstashOutput) Reset() {
	*x = LogstashOutput{}
	mi := &file_client_filebeat_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogstashOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogstashOutput) ProtoMessage() {}

func (x *LogstashOutput) ProtoReflect() protoreflect.Message {
	mi := &file_client_filebeat_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogstashOutput.ProtoReflect.Descriptor instead.
func (*LogstashOutput) Descriptor() ([]byte, []int) {
	return file_client_filebeat_proto_rawDescGZIP(), []int{6}
}

func (x *LogstashOutput) GetHosts() []string {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *LogstashOutput) GetLoadbalance() bool {
	if x != nil {
		return x.Loadbalance
	}
	return false
}

var File_client_filebeat_proto protoreflect.FileDescriptor

var file_client_filebeat_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x62, 0x65, 0x61,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22,
	0x63, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x62, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x61, 0x74, 0x68, 0x73, 0x22, 0x58, 0x0a, 0x12, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x73, 0x74, 0x22, 0x2d,
	0x0a, 0x13, 0x44, 0x72, 0x6f, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x95, 0x01,
	0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x62, 0x65, 0x61, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x43, 0x0a, 0x0d, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x34, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x73,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x73, 0x68, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x48,
	0x00, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x73, 0x68, 0x42, 0x08, 0x0a, 0x06, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x13, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x68, 0x6f,
	0x73, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x73, 0x6c, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x73, 0x6c, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12,
	0x32, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x48, 0x00, 0x52, 0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x41,
	0x75, 0x74, 0x68, 0x42, 0x06, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x43, 0x0a, 0x09, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x22, 0x48, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x73, 0x74, 0x61, 0x73, 0x68, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x6f, 0x61, 0x64,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6c,
	0x6f, 0x61, 0x64, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x2f, 0x65, 0x6c, 0x63, 0x68, 0x69, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_client_filebeat_proto_rawDescOnce sync.Once
	file_client_filebeat_proto_rawDescData = file_client_filebeat_proto_rawDesc
)

func file_client_filebeat_proto_rawDescGZIP() []byte {
	file_client_filebeat_proto_rawDescOnce.Do(func() {
		file_client_filebeat_proto_rawDescData = protoimpl.X.CompressGZIP(file_client_filebeat_proto_rawDescData)
	})
	return file_client_filebeat_proto_rawDescData
}

var file_client_filebeat_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_client_filebeat_proto_goTypes = []any{
	(*FilebeatInput)(nil),       // 0: client.FilebeatInput
	(*TimestampProcessor)(nil),  // 1: client.TimestampProcessor
	(*DropFieldsProcessor)(nil), // 2: client.DropFieldsProcessor
	(*FilebeatOutput)(nil),      // 3: client.FilebeatOutput
	(*ElasticsearchOutput)(nil), // 4: client.ElasticsearchOutput
	(*BasicAuth)(nil),           // 5: client.BasicAuth
	(*LogstashOutput)(nil),      // 6: client.LogstashOutput
}
var file_client_filebeat_proto_depIdxs = []int32{
	4, // 0: client.FilebeatOutput.elasticsearch:type_name -> client.ElasticsearchOutput
	6, // 1: client.FilebeatOutput.logstash:type_name -> client.LogstashOutput
	5, // 2: client.ElasticsearchOutput.basic_auth:type_name -> client.BasicAuth
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_client_filebeat_proto_init() }
func file_client_filebeat_proto_init() {
	if File_client_filebeat_proto != nil {
		return
	}
	file_client_filebeat_proto_msgTypes[3].OneofWrappers = []any{
		(*FilebeatOutput_Elasticsearch)(nil),
		(*FilebeatOutput_Logstash)(nil),
	}
	file_client_filebeat_proto_msgTypes[4].OneofWrappers = []any{
		(*ElasticsearchOutput_ApiKey)(nil),
		(*ElasticsearchOutput_BasicAuth)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_client_filebeat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_client_filebeat_proto_goTypes,
		DependencyIndexes: file_client_filebeat_proto_depIdxs,
		MessageInfos:      file_client_filebeat_proto_msgTypes,
	}.Build()
	File_client_filebeat_proto = out.File
	file_client_filebeat_proto_rawDesc = nil
	file_client_filebeat_proto_goTypes = nil
	file_client_filebeat_proto_depIdxs = nil
}
